#!/usr/bin/env bash

# Fail the whole script if any command fails
set -e

# Set Defaults
PLUGIN_SETTINGS_REGION="${PLUGIN_SETTINGS_REGION:="us-east-1"}"
PLUGIN_SETTINGS_TARGET="${PLUGIN_SETTINGS_TARGET:="/"}"
PLUGIN_SETTINGS_SOURCE="${PLUGIN_SETTINGS_SOURCE:="."}"

if [ -z "${PLUGIN_SETTINGS_BUCKET}" ]; then
  echo "FATAL: Missing S3 Bucket Name"
  exit 1
fi

if [ "${PLUGIN_SETTINGS_TARGET:0:1}" != "/" ]; then
  # Fix the target if it is not absolute
  PLUGIN_SETTINGS_TARGET="/${PLUGIN_SETTINGS_TARGET}"
fi

# Prepare command-line options needed for aws s3 sync
declare -a OPTIONS
[ -n "${PLUGIN_SETTINGS_EXCLUDE}" ]               && OPTIONS+=(--exclude "'${PLUGIN_SETTINGS_EXCLUDE}'")
[ -n "${PLUGIN_SETTINGS_INCLUDE}" ]               && OPTIONS+=(--include "'${PLUGIN_SETTINGS_INCLUDE}'")
[ -n "${PLUGIN_SETTINGS_ACL}" ]                   && OPTIONS+=(--acl "${PLUGIN_SETTINGS_ACL}")
[ -n "${PLUGIN_SETTINGS_SSE}" ]                   && OPTIONS+=(--sse "${PLUGIN_SETTINGS_SSE}")
[ "${PLUGIN_SETTINGS_ONLY_SHOW_ERRORS}" == true ] && OPTIONS+=(--only-show-errors)
[ "${PLUGIN_SETTINGS_DELETE}" == true ]           && OPTIONS+=(--delete)

# Export the credentials (if provided) for the AWS CLI
if [ -n "${PLUGIN_SETTINGS_AWS_ACCESS_KEY_ID}" ] && [ -n "${PLUGIN_SETTINGS_AWS_SECRET_ACCESS_KEY}" ]; then
  export AWS_ACCESS_KEY_ID="${PLUGIN_SETTINGS_AWS_ACCESS_KEY_ID}"
  export AWS_SECRET_ACCESS_KEY="${PLUGIN_SETTINGS_AWS_SECRET_ACCESS_KEY}"
fi

if [ -n "${PLUGIN_SETTINGS_AWS_ASSUME_ROLE}" ]; then
  # Assume the role provided, and override credentials (if provided)
  CREDENTIALS=$(set -x; aws sts assume-role \
                  --role-arn ${PLUGIN_SETTINGS_AWS_ASSUME_ROLE} \
                  --role-session-name drone-s3-sync)
  export AWS_ACCESS_KEY_ID=$(echo "${CREDENTIALS}" | jq -r '.Credentials.AccessKeyId')
  export AWS_SECRET_ACCESS_KEY=$(echo "${CREDENTIALS}" | jq -r '.Credentials.SecretAccessKey')
  export AWS_SESSION_TOKEN=$(echo "${CREDENTIALS}" | jq -r '.Credentials.SessionToken')
fi

# Output the only the following command to STDOUT as well as run it
( set -x
  aws s3 sync --region "${PLUGIN_SETTINGS_REGION}" "${OPTIONS[@]}" "${PLUGIN_SETTINGS_SOURCE}" "s3://${PLUGIN_SETTINGS_BUCKET}${PLUGIN_SETTINGS_TARGET%/}/" )

# If a CloudFront Distribution ID is set, also set an invalidation to the root
# of the target we've been provided
if [ -n "${PLUGIN_SETTINGS_CLOUDFRONT_DISTRIBUTION_ID}" ]; then
  ( set -x
    aws cloudfront create-invalidation --region "${PLUGIN_SETTINGS_REGION}" --distribution-id "${PLUGIN_SETTINGS_CLOUDFRONT_DISTRIBUTION_ID}" --paths "${PLUGIN_SETTINGS_TARGET%/}/*" )
fi
